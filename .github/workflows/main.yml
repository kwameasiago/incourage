name: Docker CI

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: set enviroment variables
      env:
        DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@${{ secrets.POSTGRES_HOST }}:${{ secrets.POSTGRES_PORT }}/${{ secrets.POSTGRES_DB }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_TYPE: ${{ secrets.POSTGRES_TYPE }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
        S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
    
    - name: Create .env.local file
      run: touch .env.local

    - name: Build containers
      run: docker-compose -f docker-compose.test.yml up --build -d

    - name: Execute unit tests
      run: docker-compose -f docker-compose.test.yml exec api npm run test

    - name: Execute end-to-end tests
      run: docker-compose -f docker-compose.test.yml exec api npm run test:e2e

    - name: Clean up
      if: always()
      run: docker-compose -f docker-compose.test.yml down
